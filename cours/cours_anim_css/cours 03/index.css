.btn {
    background-color: rgba(1,28,55,0);
    border: 4px solid #011c37;
    color: #15DEA5;
    border-radius: 10rem;
    cursor: pointer;
    font-size: 3rem;
    overflow: hidden;
    text-align: center;
    padding: 1.85rem 3rem;
    margin: auto;
    margin-top: 5em;
    width: 20%;
    position: relative;
    transition: transform 450ms, background-color 300ms 150ms;
}

.btn:hover{
    transform: scale(1.15);
    background-color: rgba(1,28,55,1);
}


/*
- Il est possible de mettre un nombre illimité d'animation sur une balise.
- L'attribut "all" dans "transition:"  applique les paramètres à tous les animations. (ex:"transition: all 450ms;").
- Pour viser chaque animation, on peut séparer la propriété "transform:" pour donner des temps differents par exemple.
- Rendre une animation moins parfaite, asynchrone par exemple lui apporte un peu de texture, de chaleur.
- La propriété "transition-delay:" permet de retarder une animation selon le temps qui lui est indiqué. c
        Cette propriété peut être définie directement dans "transition:" en l’indiquant juste après "transition-duration"
- L’accélération et la décélération des transitions sont contrôlées par la propriété  "transition-timing-function" ;
- Si aucune fonction de timing n’est indiquée, la transition utilisera la fonction  ease. Elle suit un profil d’accélération plus net, et une rampe de décélération plus prononcée ;
- Parmi les autres mots clés pour les fonctions de temporisation, on peut trouver  ease-in,   ease-out,   ease-in-out, et  linear ;
- Quand aucune fonction de timing par défaut ne correspond à l’animation, il est possible de créer ses propres courbes d’animation personnalisée à l’aide de la fonction  cubic-bezier()  ;
- Il existe cubic-bezier.com pour ajuster les effets de timing personnalisé avec la fonction "cubic-bezier(valeur ici)"
*/